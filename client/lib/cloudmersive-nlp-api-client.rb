=begin
#nlpapi

#The powerful Natural Language Processing APIs let you perform part of speech tagging, entity identification, sentence parsing, and much more to help you understand the meaning of unstructured text.

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: unset

=end

# Common files
require 'cloudmersive-nlp-api-client/api_client'
require 'cloudmersive-nlp-api-client/api_error'
require 'cloudmersive-nlp-api-client/version'
require 'cloudmersive-nlp-api-client/configuration'

# Models
require 'cloudmersive-nlp-api-client/models/check_json_response'
require 'cloudmersive-nlp-api-client/models/check_sentence_json_response'
require 'cloudmersive-nlp-api-client/models/correct_json_response'
require 'cloudmersive-nlp-api-client/models/correct_word_in_sentence_json_response'
require 'cloudmersive-nlp-api-client/models/get_words_json_response'
require 'cloudmersive-nlp-api-client/models/language_detection_response'
require 'cloudmersive-nlp-api-client/models/pos_request'
require 'cloudmersive-nlp-api-client/models/pos_response'
require 'cloudmersive-nlp-api-client/models/pos_sentence'
require 'cloudmersive-nlp-api-client/models/pos_tagged_word'
require 'cloudmersive-nlp-api-client/models/word_position'

# APIs
require 'cloudmersive-nlp-api-client/api/extract_entities_string_api'
require 'cloudmersive-nlp-api-client/api/language_detection_api'
require 'cloudmersive-nlp-api-client/api/parse_string_api'
require 'cloudmersive-nlp-api-client/api/pos_tagger_json_api'
require 'cloudmersive-nlp-api-client/api/pos_tagger_string_api'
require 'cloudmersive-nlp-api-client/api/sentences_api'
require 'cloudmersive-nlp-api-client/api/spell_check_api'
require 'cloudmersive-nlp-api-client/api/words_api'

module CloudmersiveNlpApiClient
  class << self
    # Customize default settings for the SDK using block.
    #   CloudmersiveNlpApiClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
