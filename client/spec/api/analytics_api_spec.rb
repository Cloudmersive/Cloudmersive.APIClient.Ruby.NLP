=begin
#nlpapiv2

#The powerful Natural Language Processing APIs (v2) let you perform part of speech tagging, entity identification, sentence parsing, and much more to help you understand the meaning of unstructured text.

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for CloudmersiveNlpApiClient::AnalyticsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AnalyticsApi' do
  before do
    # run before each test
    @instance = CloudmersiveNlpApiClient::AnalyticsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AnalyticsApi' do
    it 'should create an instance of AnalyticsApi' do
      expect(@instance).to be_instance_of(CloudmersiveNlpApiClient::AnalyticsApi)
    end
  end

  # unit tests for analytics_profanity
  # Perform Profanity and Obscene Language Analysis and Detection on Text
  # Analyze input text using advanced Profanity and Obscene Language Analysis to determine if the input contains profane language.  Supports English language input.  Consumes 1-2 API calls per sentence.
  # @param input Input profanity analysis request
  # @param [Hash] opts the optional parameters
  # @return [ProfanityAnalysisResponse]
  describe 'analytics_profanity test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for analytics_sentiment
  # Perform Sentiment Analysis and Classification on Text
  # Analyze input text using advanced Sentiment Analysis to determine if the input is positive, negative, or neutral.  Supports English language input.  Consumes 1-2 API calls per sentence.
  # @param input Input sentiment analysis request
  # @param [Hash] opts the optional parameters
  # @return [SentimentAnalysisResponse]
  describe 'analytics_sentiment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
