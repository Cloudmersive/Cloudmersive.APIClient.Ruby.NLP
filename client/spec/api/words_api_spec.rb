=begin
#nlpapi

#The powerful Natural Language Processing APIs let you perform part of speech tagging, entity identification, sentence parsing, and much more to help you understand the meaning of unstructured text.

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: unset

=end

require 'spec_helper'
require 'json'

# Unit tests for CloudmersiveNlpApiClient::WordsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'WordsApi' do
  before do
    # run before each test
    @instance = CloudmersiveNlpApiClient::WordsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WordsApi' do
    it 'should create an instance of WordsApi' do
      expect(@instance).to be_instance_of(CloudmersiveNlpApiClient::WordsApi)
    end
  end

  # unit tests for words_adjectives
  # Get adjectives in string
  # Retrieves all adjectives in input string
  # @param input Input string
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'words_adjectives test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for words_adverbs
  # Get adverbs in input string
  # Returns all adverb words in the input string
  # @param input Input string
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'words_adverbs test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for words_get_words_json
  # Get words in input string (JSON)
  # Get the component words in an input string, formatted as JSON
  # @param input String to process
  # @param [Hash] opts the optional parameters
  # @return [GetWordsJsonResponse]
  describe 'words_get_words_json test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for words_get_words_string
  # Get words from string
  # Segment an input string into its component words
  # @param input Input string
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'words_get_words_string test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for words_nouns
  # Get nouns in string
  # Returns all of the nouns in the input string
  # @param input Input string
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'words_nouns test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for words_post
  # Get the verbs in a string
  # Get all of the verbs in the input string.
  # @param input Input string
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'words_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for words_pronouns
  # Returns all pronounts in string
  # Returns all pronouns in the input string
  # @param input Input string
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'words_pronouns test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for words_proper_nouns
  # Get proper nouns in a string
  # Returns all of the proper nouns in a string.  Proper nouns are named entities such as \&quot;Hilton\&quot;.
  # @param input Input string
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'words_proper_nouns test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
